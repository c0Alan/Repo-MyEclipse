<?xml version="1.0" encoding="utf-8"?>
<Item type="treeCatalog" cn="树导航目录" jsType="artery-tree" nameprop="caption"
	icon="treeCatalog.gif" iconNew="treeCatalogNew.gif">
	<Info>
		<Author>Artery开发小组</Author>
		<CreateTime>2008-09-05</CreateTime>
		<Describe><![CDATA[树导航目录是静态树导航中的节点类型，在目录中可以包含其他节点，也可以包含叶子节点-树导航操作项。树导航目录在导航栏中起到分组的作用并可以折叠隐藏子组件。通过连接到或后台脚本可实现对点击事件的导航功能。]]></Describe>
		<Images>
			<File>info1.gif</File>
		</Images>
	</Info>
	<Parents>
		<Parent type="treeNav" />
	</Parents>
	<Children>
		<Child type="treeCatalog" />
		<Child type="treeItem" />
	</Children>
	<Class>com.thunisoft.artery.plugin.nav.TreeCatalog
	</Class>
	<JsFile />
	<Properties>
		<Property cn="标识" type="1" name="id"
			tips="在同一表单中唯一标识一个表单对象，不可重复，默认由系统自动生成uuid。可更改，便于在脚本中通过Aty.get('id')进行调用。">
			<Value />
		</Property>
		<Property cn="说明" type="1" name="caption" tips="设置导航目录的说明">
			<Value />
		</Property>
		<Property cn="图片" type="5" name="icon" tips="设置组件的显示图标，直接从系统文件中读取，此处要写相对路径，如/artery/form/parse/images/checked.gif">
			<Value />
		</Property>
		<Property cn="使用图片" type="3" name="useIcon" ct="[true,false]" tips="当设置为true时,树节点会显示'图片'属性中定义的图片">
      		<Value>true</Value>
    	</Property>
		<Property cn="操作区域编号" type="1" name="operAreaId" tips="指明了此树中节点中的链接将在这里标识的区域中打开。相当于target，一般为框架页面中某个中心布局下面的操作区域id。(使用此属性需要设置连接到的target为空)">
			<Value />
		</Property>
		<Property cn="链接到" type="6" name="linkto"
			tips="设置当单击导航目录时，所链接到的对象（form表单或框架页面）">
			<Value />
		</Property>
		<Property cn="是否生成" type="11" name="show" tips="当为false时在页面不会生成本组件，即本组件不存在，而不是隐藏本组件，注意与hidden属性的区别">
			<Value>true</Value>
		</Property><Property cn="生成时权限" type="1" name="showRight" tips="设置后，拥有设置的权限才会生成控件">
			<Value />
		</Property><Property cn="客户端" type="15" group="点击时脚本" name="onClickClient"
			sh="客户端：rc--远程调用对象" tips="设置当单击导航目录时，所调用的脚本">
			<Value />
		</Property>
		<Property cn="服务器端" type="14" group="点击时脚本" name="onClickServer"
			sh="客户端：rc--远程调用对象" tips="设置当单击导航目录时，所调用的脚本">
			<Value />
			<Description><![CDATA[
<p>当前台导航栏节点被点击时，如发送后台请求，将执行此方法</p>  
<p>示例代码如下：</p>    
<pre> 
/**
 * 点击时脚本
 * 
 * @param item
 *            控件对象
 */
public Object dynamicNavc2551_onNodeClickServer(Item item) {
	//获取参数
	String param = ParamUtil.getString("param1");
	//后台操作
	
	//返回消息
	return "ok";
}
</pre>
			]]>
			</Description>
		</Property>
		<Property cn="计数脚本" type="14"  name="onCount"
			tips="设置控件的计数脚本，可以用来展示这个控件中的对象数量">
			<Value />
			<Description><![CDATA[
				设置控件的计数脚本，可以用来展示这个控件中的对象数量，示例如下：
					<pre>
						// 计数显示图书的个数
						public String node_book_onCount(Item item) {
						    String sql = "select count(*) from T_Eg_Book";
						    Artery.getDba().execQuery(sql);
						    Artery.getDba().next();
						    int count = Artery.getDba.getInt(1);
						    String s = "<font color=red>("+count+")</font>";
						    return s;
						}
					</pre>
				]]>
			</Description>
		</Property>
		
		
		<Property cn="生成时脚本" type="14"  name="onShow"
			tips="可写服务器端脚本，每个组件都会有此属性，会在系统解析此组件时执行此脚本">
			<Value />
		</Property>
	</Properties>
  	<JavaFunctions>
		<JavaFunction name="onClickServer">
<![CDATA[
/**
 * 点击时脚本
 * 
 * @param item
 *            控件对象
 */
public Object {methodName}(Item item) {
	return null;
}
]]>
		</JavaFunction>
		<JavaFunction name="onCount">
<![CDATA[
/**
 * 计数脚本
 * 
 * @param item
 *            控件对象
 */
public String {methodName}(Item item) {
	return null;
}
]]>
		</JavaFunction>
	</JavaFunctions>
</Item>

