<?xml version="1.0" encoding="utf-8"?>
<Item type="button" cn="按钮" jsType="artery-base" nameprop="text"
	icon="button.gif" iconNew="buttonNew.gif">
	<Info>
		<Author>Artery开发小组</Author>
		<CreateTime>2008-08-05</CreateTime>
		<Describe>生成页面的按钮控件</Describe>
		<Images>
			<File>info1.gif</File>
		</Images>
	</Info>
	<Parents>
		<Parent type="buttonArea" />
		<Parent type="footer" />
	</Parents>
	<Children>
		<Child type="blankPanel" />
	</Children>
	<Class>com.thunisoft.artery.plugin.button.Button
	</Class>
	<JsFile>
		<File>button.js</File>
	</JsFile>
	<Properties>
		<Property cn="组件类型" type="1" name="xtype" isHidden="1"
			export="true" cfg="true">
			<Value>apButton</Value>
		</Property>
		<Property cn="标识" type="1" name="id"
			tips="在同一表单中唯一标识一个表单对象，不可重复，默认由系统自动生成uuid。可更改，便于在脚本中通过Aty.get('id')进行调用。">
			<Value />
		</Property>
		<Property cn="宽度" type="1" name="width" mask="^\d{1,}%{0,1}$"
			et="正确输入为：n%或n" tips="设置本组件的宽度，可输入数值或百分比">
			<Value>55</Value>
		</Property>
		<Property cn="名称" type="1" name="text" export="true" tips="设置菜单项的显示名称">
			<Value>button</Value>
		</Property>
		<Property cn="提示信息" type="1" name="tooltip" tips="设置鼠标移动到按钮上的提示">
			<Value />
		</Property>
		<Property cn="省略过长列标题" type="11" name="isTitleEllipsis" ct="[true,false]"
			tips="当标题过长时，是否省略列标题">
			<Value>false</Value>
			<Description><![CDATA[当标题过长时，是否省略列标题]]></Description>
		</Property>
		<Property cn="图标" type="5" name="icon" export="true" tips="设置组件的显示图标，直接从系统文件中读取，此处要写相对路径，如/artery/arteryImage/organ/add_emp.gif">
			<Value />
		</Property>
		<Property cn="只显示图标" type="11" name="onlyShowIcon" tips="按钮是否以图标按钮的样式展现">
			<Value>false</Value>
		</Property>
		<Property cn="图标上方显示" type="11" name="iconTop" tips="设置图标是否显示在文本的上方，只有部分样式支持此属性...">
			<Value>false</Value>
			<Description><![CDATA[
			<p>设置图标是否显示在文本的上方，只有部分样式支持此属性，如：block样式</p>
			<p><img src="../../resources/images/common/button/button_iconTop.png"></p>
      		]]></Description>
		</Property>
		    <Property cn="开关模式" type="11" name="toggle" tips="当设置为true时，本控件会在按下和不按下的状态间切换...">
      <Value>false</Value>
    </Property>
		<Property cn="是否按下" type="11" name="pressed" tips="设置按钮的初始状态是否是按下的状态">
			<Value>false</Value>
		</Property>
		<Property cn="使用请求状态" type="11" name="loadingState" export="true" tips="当设置为true时，按钮会在点击1秒后生成加载的提示图标，同时把本按钮的点击事件设置为无效，需要手动调用">
			<Description><![CDATA[
			<p>当设置为true时，按钮会在点击1秒后生成加载的提示图标，同时把本按钮的点击事件设置为无效，需要手动调用按钮的hideLoading()方法来取消加载状态</p>
			<p>点击效果如图：<img src="../../resources/images/common/button/button_loadingState.png"></p>
			<p>操作完成后，在按钮的点击响应方法中手动调用hideLoading()方法来取消加载状态，如：</p>
			<pre>
function button_onClickClient (rc){
	var btn = Artery.get("buttonId");
	Artery.get("formArea").submit(function(result){
		if(result == "ok"){
			Artery.showTip('保存成功!');	
			btn.hideLoading();
		}
	});
}
			</pre>
      		]]></Description>
			<Value>false</Value>
		</Property>
		<Property cn="使用Frame样式" type="11" name="frame" export="true"
			tips="当设置为true时，本组件会以Frame的样式展现">
			<Value>false</Value>
		</Property>
		<Property cn="是否无效" type="11" name="disabled" tips="组件是否无效">
			<Value>false</Value>
		</Property>
		<Property cn="是否隐藏" type="11" name="hidden"
			tips="当为true是为隐藏组件，组件还是生成了，可以用组件对应的show()方法来显示组件，要注意与show属性的区别">
			<Value>false</Value>
		</Property>
		<Property cn="链接到" type="6" name="linkto" tips="选择当组件点击时连接到的表单">
			<Value />
		</Property>
		<Property cn="客户端" type="15" group="点击时脚本" name="onClickClient"
			tips="鼠标点击本组件时触发的客户端事件">
			<Value />
		</Property>
		<Property cn="服务器端" type="14" group="点击时脚本" name="onClickServer"
			tips="鼠标点击本组件时触发的服务器端事件">
			<Value />
		</Property>
		<Property cn="样式名称" type="1" name="className"
			tips="设置本组件的样式名称，相当于html的className属性，此样式会应用到控件最外层标签上">
			<Value />
		</Property>
		<Property cn="主题样式" type="21" name="themeStyle" tips="设置控件的风格样式">
			<Value>inherit</Value>
		</Property>
		<Property cn="是否生成" type="11" name="show"
			tips="当为false时在页面不会生成本组件，即本组件不存在，而不是隐藏本组件，注意与hidden属性的区别">
			<Value>true</Value>
		</Property>
		<Property cn="生成时权限" type="1"  name="showRight" tips="设置后，拥有该权限的用户访问才会生成此控件...">
			<Value />
		</Property>
		<Property cn="生成时脚本" type="14" name="onShow"
			tips="可写服务器端脚本，每个组件都会有此属性，会在系统解析此组件时执行此脚本">
			<Value />
		</Property>
	</Properties>
	<Methods>
		<Method name="getText" return="string" tips="获得按钮上的文本">
			<Description>
		    <![CDATA[
		    <p>获得按钮上的文本</p>
		 <pre>
Artery.get("buttonId").getText();
  		</pre>
  		    ]]>
  		    </Description>
			<Parameters>
				<Param>无</Param>
			</Parameters>
			<Return>string</Return>
		</Method>
		<Method name="setText"></Method>
		<Method name="hideIcon"></Method>
		<Method name="showIcon"></Method>
		<Method name="setIcon"></Method>
		<Method name="click"></Method>
		<Method name="isDisabled"></Method>
		<Method name="isHidden"></Method>
		<Method name="hide"></Method>
  		<Method name="show"></Method>
		<Method name="disable" inherit="false" return="void" tips="设置控件无效">
			<Description><![CDATA[<p>设置控件无效</p><pre>
Artery.get("buttonId").disable();
  		</pre>]]></Description>
			<Parameters>
				<Param>无</Param>
			</Parameters>
			<Return>void</Return>
		</Method>
		<Method name="enable" inherit="false" return="void" tips="设置控件有效">
			<Description><![CDATA[<p>设置控件有效</p><pre>
Artery.get("buttonId").enable();
  		</pre>]]></Description>
			<Parameters>
				<Param>无</Param>
			</Parameters>
			<Return>void</Return>
		</Method>
		<Method name="setTooltip"></Method>
	</Methods>
	<JavaFunctions>
		<JavaFunction name="onClickServer">
<![CDATA[
/**
 * 点击时脚本
 * 
 * @param item
 *            控件对象
 */
public Object {methodName}(Item item) {
	return null;
}
]]>
		</JavaFunction>
	</JavaFunctions>
</Item>

