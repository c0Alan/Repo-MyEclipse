<?xml version="1.0" encoding="utf-8"?>
<Item type="column" cn="列" jsType="artery-list" nameprop="title"
	icon="column.gif" iconNew="columnNew.gif">
	<Info>
		<Author>Artery开发小组</Author>
		<CreateTime>2008-09-05</CreateTime>
		<Describe>列控件可以自定义列表中的一列操作内容，可在此控件中增加文本或图片等操作项。</Describe>
		<Images>
			<File>info1.png</File>
		</Images>
	</Info>
	<Parents>
		<Parent type="listArea" />
	</Parents>
	<Children>
		<Child type="colOperImg" />
		<Child type="colOperText" />
		<Child type="blankPanel" />
	</Children>
	<Class more="editor">com.thunisoft.artery.plugin.grid.Column
	</Class>
	<JsFile />
	<Properties>
		<Property cn="标识" type="1" name="id"
			tips="在同一表单中唯一标识一个表单对象，不可重复，默认由系统自动生成uuid。可更改，便于在脚本中通过Aty.get('id')进行调用。">
			<Value />
		</Property>
		<Property cn="标题" type="1" name="title" tips="设置本列的标题">
			<Value>Title</Value>
		</Property>
		<Property cn="省略过长列标题" type="11" name="isTitleEllipsis" ct="[true,false]"
			tips="当标题过长时，是否省略列标题">
			<Value>false</Value>
			<Description><![CDATA[
    			当标题过长时，是否省略列标题
      ]]></Description>
			<Conditions>
				<Condition>此属性目前只支持在list类型下使用</Condition>
			</Conditions>
		</Property>
		<Property cn="列类型" type="3" name="editor" ct="[data,checkbox,radio]"
			tips="设置此列表的类型，可选为checkbox，radio，data，默认为data...">
			<Value>data</Value>
			<Description><![CDATA[
       设置此列表的类型，可选为checkbox，radio，data，默认为data，即一般数据类型
      ]]></Description>
		</Property>
		<Property cn="继承key" type="1" name="inheritkey">
			<Value />
		</Property>
		<Property cn="继承表" type="1" name="inherittbl">
			<Value />
		</Property>
		<Property cn="继承字段" type="1" name="inheritfld">
			<Value />
		</Property>
		<Property cn="数据源" type="1" name="dataName">
			<Value />
		</Property>
		<Property cn="作为数据项" type="11" name="isOnlyData">
			<Value>false</Value>
		</Property>
		<Property cn="列头全选" type="11" name="headSelect">
			<Value>false</Value>
		</Property>
		<Property cn="参与导出" type="11" name="export">
			<Value>true</Value>
		</Property>
		<Property cn="新建默认值" type="1" name="defValue">
			<Value />
		</Property>
		<Property cn="宽度" type="1" name="width" mask="^\d{1,}%{0,1}$"
			et="正确输入为：n%或n" tips="设置本组件的宽度，目前各列的宽度不支持填写百分比，如果要使用比例宽度，请配合自动宽度属性">
			<Value>50</Value>
		</Property>
		<Property cn="自动宽度" type="11" name="autoWidth"
			tips="如果为true，则本列的宽度将自动展开，在列表的适应宽度属性为true时有效">
			<Value>false</Value>
		</Property>
		<Property cn="是否显示Hint提示" type="11" name="isShowHint">
			<Value>false</Value>
		</Property>
		<Property cn="Hint提示内容" type="1" name="hintText"
			tips="设置本列的Hint提示内容，可写数据源标签...">
			<Value />
		</Property>
		<Property cn="提示是否过滤html标签" type="11" name="isHintFilterHtml"
			tips="Hint提示是否过滤html标签，设置为true则过滤html标签；否则，html标签会作为文本输出">
			<Value>true</Value>
		</Property>
		<Property cn="是否折行" type="3" name="autoRowHeight" ct="[inherit,true,false]"
			tips="当设置为true时，单元格的内容如果过多时会折行显示">
			<Value />
		</Property>
		<Property cn="内容位置" type="3" name="contentAlign" ct="[left,center,right]" tips="设置本列内容的位置，默认为left">
			<Value>left</Value>
		</Property>
		<Property cn="内容是否编码" type="11" name="htmlEncode"
			tips="设置本列内容是否编码显示，编码后，内容中的html标签将做为文本输出">
			<Value>true</Value>
		</Property>
		<Property cn="是否过滤" type="11" name="isFilter">
			<Value>false</Value>
		</Property>
		<Property cn="过滤提示" type="1" name="filterEmptyText">
			<Value />
		</Property>
		<Property cn="过滤默认值" type="1" name="filterDefault" tips="设置本列的过滤默认值，在开启过滤功能时有效">
			<Value/>
		</Property>
		<Property cn="过滤动态代码" type="14" name="dynamicDataFilter">
			<Value />
		</Property>
		<Property cn="是否排序" type="11" name="isOrderBy">
			<Value>false</Value>
		</Property>
		<Property cn="排序方向" type="3" name="sortDir" ct="[ASC,DESC]">
			<Value>ASC</Value>
		</Property>
		<Property cn="显示排序图标" type="11" name="showOrderIcon">
			<Value>false</Value>
		</Property>
		<Property cn="是否合计" type="11" name="isSum">
			<Value>false</Value>
		</Property>
		<Property cn="合计处理" type="1" name="sumFormula">
			<Value />
		</Property>
		<Property cn="是否固定" type="11" name="isFix">
			<Value>false</Value>
		</Property>
		<Property cn="是否隐藏" type="11" name="hidden"
			tips="当为true是为隐藏组件，组件还是生成了，可以用组件对应的show()方法来显示组件，要注意与show属性的区别">
			<Value>false</Value>
		</Property>
		<Property cn="是否生成" type="11" name="show"
			tips="当为false时在页面不会生成本组件，即本组件不存在，而不是隐藏本组件，注意与hidden属性的区别">
			<Value>true</Value>
		</Property>
		<Property cn="生成时权限" type="1" name="showRight" tips="设置后，拥有设置的权限才会生成控件">
			<Value />
		</Property>
		<Property cn="强制输出列样式" type="11" name="mustColStyle"
			tips="当此列有空面板时，默认不会输入列td单元格的样式sl-data-col-td，设置为true可强制输出">
			<Value>false</Value>
		</Property>
		<Property cn="链接到" type="6" name="linkto">
			<Value />
		</Property>
		<Property cn="客户端" type="15" group="点击时脚本" name="onClickClient"
			tips="鼠标点击本组件时触发的客户端事件">
			<Value />
		</Property>
		<Property cn="服务器端" type="14" group="点击时脚本" name="onClickServer"
			tips="鼠标点击本组件时触发的服务器端事件...">
			<Value />
			<Description><![CDATA[
			鼠标点击本组件时触发的服务器端事件
			<pre>
/**
 * 点击时脚本
 * 
 * @param item
 *            控件对象
 */
public Object column6bae6_onClickServer(Item item) {
	//数据操作
	
	return “操作成功”;
}
			</pre>
			]]></Description>
		</Property>
		<Property cn="客户端" type="15" group="列头全选脚本" name="onHeadSelectClient"
			tips="当列类型为checkbox时，可写此脚本，监听列头全选事件">
			<Value />
			<Description><![CDATA[
当列类型为checkbox时，可写此脚本，监听列头全选事件：
<pre>
// 客户端代码，其中会传入参数：checked
if(checked){
    Artery.get("button").enable();
}else{
    Artery.get("button").disable();
}
</pre>
      ]]></Description>
		</Property>
		<Property cn="服务器端" type="14" group="列头全选脚本" name="onHeadSelectServer"
			tips="当列类型为checkbox时，可写此脚本，监听列头全选事件">
			<Value />
			 <Description><![CDATA[
			 当列类型为checkbox时，可写此脚本，监听列头全选事件
			 <pre>
			 	/**
 * 列头全选脚本
 * 
 * @param item
 *            控件对象
 */
public Object column6bae6_onHeadSelectServer(Item item) {
	return null;
}
			 </pre>
			  ]]></Description>
		</Property>
		<Property cn="无效规则" type="14" name="disableRule"
			tips="设置此列checkbox或radio展现时是否无效，返回true时无效...">
			<Value />
			<Description><![CDATA[
       设置此列checkbox或radio展现时是否无效，返回true时无效，如下逻辑类方法示例：
       <pre>
/**
 * 无效规则
 * 
 * @param item
 *            控件对象
 * @param cell
 *            展现单元格对象
 * @param cellRow
 *            展现数据行对象
 * @param dataRow
 *            结果数据行对象
 * @param value
 *            图片所在的当前列的值
 * @return 当返回TRUE时此选择框为无效状态
 * @throws Exception
 */
public boolean checkUser_disableRule(Item item, Cell cell, CellRow cellRow,
		Object dataRow, String value) throws Exception {
	if (BookUtil.isLendMaxBook() || BookUtil.isCurrUserOverLendTime()) {
		return true;
	}
	return false;
}     
</pre>]]></Description>
			<Conditions>
				<Condition>此事件只在checkbox列起作用</Condition>
			</Conditions>
		</Property>
		<Property cn="选中规则" type="14" name="checkedRule"
			sh="value,cellRow,cellRow.getString(col),dataRow,dataRow.isEmpty(),dataRow.getString(col),dataRow.getInt(col),dataRow.getDouble(col),dataRow.getData(col),dataRow.index()"
			tips="设置此列checkbox或radio展现时是否选中，返回true时为选中状态...">
			<Value />
			<Description><![CDATA[
设置此列checkbox或radio展现时是否选中，返回true时为选中状态，如下逻辑类方法示例：
<pre>
/**
 * 选中规则
 * 
 * @param item
 *            控件对象
 * @param cell
 *            展现单元格对象
 * @param cellRow
 *            展现数据行对象
 * @param dataRow
 *            结果数据行对象
 * @param value
 *            图片所在的当前列的值
 * @return 当返回TRUE时此选择框为选中状态
 */
public boolean checkUser_checkedRule(Item item, Cell cell, CellRow cellRow,
		Object dataRow, String value) {
	if (!ParamUtil.isEmpty("lendUserId")) {
		String cid = (String)((Map)dataRow).get("C_ID");
		if (cid.equals(ParamUtil.getString("lendUserId"))) {
			return true;
		}
	}
	return false;
}
</pre>]]></Description>			
		</Property>
		<Property cn="行脚本" type="14" name="rowScript"
			sh="value,rowIndex,cellRow,cellRow.getString(col),dataRow,dataRow.isEmpty(),dataRow.getString(col),dataRow.getInt(col),dataRow.getDouble(col),dataRow.getData(col),dataRow.index()">
			<Value />
		</Property>
		<Property cn="生成时脚本" type="14" name="onShow">
			<Value />
		</Property>
	</Properties>
	<JavaFunctions>
		<JavaFunction name="dynamicDataFilter">
<![CDATA[
/**
 * 过滤动态代码
 * 
 * @param item
 *            控件对象
 */
public List {methodName}(Item item) {
	return null;
}
]]>
		</JavaFunction>
		<JavaFunction name="checkedRule"
			imports="com.thunisoft.artery.parse.eform.form.cellset.Cell;com.thunisoft.artery.parse.eform.form.cellset.CellRow;">
<![CDATA[
/**
 * 选中规则
 * 
 * @param item
 *            控件对象
 * @param cell
 *            展现单元格对象
 * @param cellRow
 *            展现数据行对象
 * @param dataRow
 *            结果数据行对象
 * @param value
 *            单元格所在的当前列的值
 * @return 当返回TRUE时此选择框为选中状态
 */
public boolean {methodName}(Item item, Cell cell, CellRow cellRow,
		Object dataRow, String value) {
	return false;
}
]]>
		</JavaFunction>
		<JavaFunction name="onHeadSelectServer">
<![CDATA[
/**
 * 列头全选脚本
 * 
 * @param item
 *            控件对象
 */
public Object {methodName}(Item item) {
	return null;
}
]]>
		</JavaFunction>
		<JavaFunction name="disableRule"
			imports="com.thunisoft.artery.parse.eform.form.cellset.Cell;com.thunisoft.artery.parse.eform.form.cellset.CellRow;">
<![CDATA[
/**
 * 无效规则
 * 
 * @param item
 *            控件对象
 * @param cell
 *            展现单元格对象
 * @param cellRow
 *            展现数据行对象
 * @param dataRow
 *            结果数据行对象
 * @param value
 *            单元格所在的当前列的值
 * @return 当返回TRUE时此选择框为无效状态
 */
public boolean {methodName}(Item item, Cell cell, CellRow cellRow,
		Object dataRow, String value) {
	return false;
}
]]>
		</JavaFunction>
		<JavaFunction name="onClickServer">
<![CDATA[
/**
 * 点击时脚本
 * 
 * @param item
 *            控件对象
 */
public Object {methodName}(Item item) {
	return null;
}
]]>
		</JavaFunction>
		<JavaFunction name="rowScript"
			imports="com.thunisoft.artery.parse.eform.form.cellset.Cell;com.thunisoft.artery.parse.eform.form.cellset.CellRow;">
<![CDATA[
/**
 * 行脚本
 * 
 * @param item
 *            控件对象
 * @param cell
 *            展现单元格对象
 * @param cellRow
 *            展现数据行对象
 * @param dataRow
 *            结果数据行对象
 * @param value
 *            当前单元格的值
 */
public void {methodName}(Item item, Cell cell, CellRow cellRow,
		Object dataRow, String value) {

}
]]>
		</JavaFunction>
	</JavaFunctions>
<JsFunctions>
    <JsFunction name="onHeadSelectClient"><![CDATA[
/**
 * 列头全选脚本({itemid})
 * 
 * @param  rc 系统提供的AJAX调用对象
 * @param  checked 是否选中
 */
function {methodName} (rc, checked){
	
}]]></JsFunction>
  </JsFunctions>
</Item>

