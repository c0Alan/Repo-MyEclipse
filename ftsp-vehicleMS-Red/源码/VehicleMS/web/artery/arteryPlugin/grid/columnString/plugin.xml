<?xml version="1.0" encoding="utf-8"?>
<Item type="columnString" cn="字符串列" menu="类型列" jsType="artery-list"
	nameprop="title" icon="columnString.gif" iconNew="columnStringNew.gif">
	<Info>
		<Author>Artery开发小组</Author>
		<CreateTime>2008-09-05</CreateTime>
		<Describe><![CDATA[
		字符串列控件用于在列表中展现字符串类型的数据。通过此控件可以设置字符串的验证条件以及提示信息。<br/>
		在可grid列表可编辑情况下，字符串提供多种编辑方式。支持复杂的文本编辑器。
		]]></Describe>
		<Images>
			<File>info.png</File>
		</Images>
	</Info>
	<Parents>
		<Parent type="listArea" />
	</Parents>
	<Children />
	<Class more="editor">com.thunisoft.artery.plugin.grid.ColumnString
	</Class>
	<JsFile>
	</JsFile>
	<Properties>
		<Property cn="标识" type="1" name="id"
			tips="在同一表单中唯一标识一个表单对象，不可重复，默认由系统自动生成uuid。可更改，便于在脚本中通过Aty.get('id')进行调用。">
			<Value />
		</Property>
        <Property cn="继承key" type="1" name="inheritkey" tips="继承的数据字典的key">
            <Value />
        </Property>
		<Property cn="继承表" type="1" name="inherittbl">
			<Value />			
		</Property>
		<Property cn="继承字段" type="1" name="inheritfld">
			<Value />			
		</Property>
		<Property cn="数据源" type="1" name="dataName"
			tips="写数据源标签，系统会对结果集中的记录根据此标签取值...">
			<Value />
			<Description><![CDATA[
       写数据源标签，系统会对结果集中的记录根据此标签取值，如：{rs1.C_NAME}
      ]]></Description>
		</Property>
		<Property cn="作为数据项" type="11" name="isOnlyData">
			<Value>false</Value>
		</Property>
		<Property cn="参与导出" type="11" name="export" tips="设置此列是否参与导出excel或pdf">
			<Value>true</Value>
		</Property>
		<Property cn="标题" type="1" name="title" tips="设置本列的标题">
			<Value>Title</Value>
		</Property>
		<Property cn="省略过长列标题" type="11" name="isTitleEllipsis" ct="[true,false]"
			tips="当标题过长时，是否省略列标题">
			<Value>false</Value>
			<Description><![CDATA[
    			当标题过长时，是否省略列标题
      ]]></Description>
			<Conditions>
				<Condition>此属性目前只支持在list类型下使用</Condition>
			</Conditions>
		</Property>
<Property cn="宽度" type="1" name="width"
			tips="设置本组件的宽度，目前各列的宽度不支持填写百分比，如果要使用比例宽度，请配合自动宽度属性">
			<Value>50</Value>
		</Property>
		<Property cn="自动宽度" type="11" name="autoWidth" tips="如果为true，则本列的宽度将自动展开，在列表的适应宽度属性为true时有效">
			<Value>false</Value>
		</Property>
		<Property cn="是否可编辑" type="11" name="isEditor">
			<Value>true</Value>
		</Property>
		<Property cn="编辑器类型" type="3" name="editor" ct="[input,textarea,richedit,password]" tips="选择可编辑状态下的编辑器类型">
			<Value>input</Value>
			<Description><![CDATA[
选择编辑器类型
<table >
  <tr>   
    <td><p>input编辑器</p></td>
    <td><p>textarea选编辑器</p></td>
  </tr>
  <tr>  
   <td><img src='../../resources/images/common/list/input.png'></td>
   <td><img src='../../resources/images/common/list/textArea.png'></td>
  </tr>
</table>	
		]]></Description>
			
		</Property>
		<Property cn="新建默认值" type="1" name="defValue">
			<Value />
		</Property>
		<Property cn="是否必填" type="11" name="required" tips="设置是否为必填项">
			<Value>false</Value>
		</Property>
		<Property cn="输入最大长度" type="1" name="maxLength" mask="^\d{1,}$" tips="最大允许输入的长度（用于输入验证）">
			<Value />
		</Property>
		<Property cn="输入最小长度" type="1" name="minLength" mask="^\d{1,}$" tips="至少输入的长度（用于输入验证）">
			<Value />
		</Property>
		<Property cn="掩码" type="1" name="regex"
			tips="此属性用于设置控件的输入值应该符合的正则表达式，如果本属性为空，则参考数据字典中的配置">
			<Value />
			<Description><![CDATA[
				<p>此属性用于设置控件的输入值应该符合的正则表达式，如果本属性为空，则参考数据字典中的配置</p>
				<p>根据掩码属性设置的正则表达式对控件的输入进行验证，当输入不符合掩码时，将根据掩码提示属性进行提示</p>
				<p>例如：</p>
				<table style='border-collapse:collapse;' border='1px' borderColor='gray'><tr><td style='text-align:center;font-weight:700'>掩码</td><td  style='text-align:center;font-weight:700'>掩码提示</td></tr><tr><td style='font-weight:700'>^[\u4E00-\u9FA5]+$</td><td>只能包含中文</td></tr><tr><td style='font-weight:700'>/^\d+(%)?$/i</td><td>输入数值或百分比</td></tr><tr><td style='font-weight:700'>/^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/</td><td>电子邮箱</td></tr><tr><td style='font-weight:700'>/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/</td><td>URL</td></tr></table>
			]]></Description>
		</Property>
		<Property cn="掩码提示" type="1" name="regexText" tips="当输入不符合掩码时，将显示本提示信息">
			<Value />
		</Property>
		<Property cn="是否显示Hint提示" type="11" name="isShowHint" tips="设置本列是否显示Hint提示">
			<Value>false</Value>
		</Property>
		<Property cn="Hint提示内容" type="1" name="hintText"
			tips="设置本列的Hint提示内容，可写数据源标签 示例：{rs1.C_NAME}">
			<Value />
		</Property>
		<Property cn="提示是否过滤html标签" type="11" name="isHintFilterHtml"
			tips="Hint提示是否过滤html标签，设置为true则过滤html标签；否则，html标签会作为文本输出">
			<Value>true</Value>
		</Property>
		<Property cn="是否折行" type="3" name="autoRowHeight" ct="[inherit,true,false]" tips="当设置为true时，单元格的内容如果过多时会折行显示">
			<Value />
		</Property>
		<Property cn="内容位置" type="3" name="contentAlign" ct="[left,center,right]" tips="设置本列内容的位置，默认为left">
			<Value>left</Value>
		</Property>
		<Property cn="内容是否编码" type="11" name="htmlEncode"
			tips="设置本列内容是否编码显示，编码后，内容中的html标签将做为文本输出">
			<Value>true</Value>
		</Property>
		<Property cn="是否过滤" type="11" name="isFilter">
			<Value>false</Value>
		</Property>
		<Property cn="过滤提示" type="1" name="filterEmptyText"
			tips="设置本列的过滤提示值，会在过滤框没有输入的情况下显示在过滤框中">
			<Value />
		</Property>
		<Property cn="过滤默认值" type="1" name="filterDefault" tips="设置本列的过滤默认值，在开启过滤功能时有效">
			<Value/>
		</Property>
		<Property cn="是否排序" type="11" name="isOrderBy">
			<Value>false</Value>
		</Property>
		<Property cn="排序方向" type="3" name="sortDir" ct="[ASC,DESC]"
			tips="设置初始排序方向，默认为ASC（升序）">
			<Value>ASC</Value>
		</Property>
		<Property cn="显示排序图标" type="11" name="showOrderIcon" tips="如果设置为true，则在列标题上显示排序图标，方向由排序方向属性指定">
			<Value>false</Value>
		</Property>
		<Property cn="是否合计" type="11" name="isSum">
			<Value>false</Value>
		</Property>
		<Property cn="合计处理" type="1" name="sumFormula">
			<Value />
		</Property>
		<Property cn="是否固定" type="11" name="isFix">
			<Value>false</Value>
		</Property>
		<Property cn="链接到" type="6" name="linkto" tips="选择当组件点击时连接到的表单">
			<Value />
		</Property>
		<Property cn="是否隐藏" type="11" name="hidden" tips="当为true是为隐藏组件，组件还是生成了，可以用组件对应的show()方法来显示组件，要注意与show属性的区别">
			<Value>false</Value>
		</Property><Property cn="是否生成" type="11" name="show" tips="当为false时在页面不会生成本组件，即本组件不存在，而不是隐藏本组件，注意与hidden属性的区别">
			<Value>true</Value>
		</Property><Property cn="生成时权限" type="1" name="showRight" tips="设置后，拥有设置的权限才会生成控件">
			<Value />
		</Property><Property cn="客户端" type="15" group="验证脚本" name="onValidClient" tips="组件的验证脚本(客户端),会传递value变量作为本组件的当前值">
			<Value />
		</Property><Property cn="服务器端" type="14" group="验证脚本" name="onValidServer" tips="组件的验证脚本(服务器端),会传递value变量作为本组件的当前值">
			<Value />
		</Property><Property cn="客户端" type="15" group="值改变时脚本" name="onChangeClient" tips="当本组件的值改变时触发的事件，客户端脚本">
			<Value />
		</Property><Property cn="服务器端" type="14" group="值改变时脚本" name="onChangeServer" tips="当本组件的值改变时触发的事件，服务器端脚本">
			<Value />
		</Property>
		<Property cn="过滤动态代码" type="14" name="dynamicDataFilter">
			<Value />
		</Property>
		<Property cn="编辑前脚本" type="15"  name="beforeEdit" tips="当本组件的值被编辑前触发的事件，客户端脚本如果返回false阻止编辑，返回true则允许继续编辑">
			<Value />
		</Property>
		<Property cn="客户端" type="15" group="点击时脚本" name="onClickClient"
			tips="鼠标点击本组件时触发的客户端事件">
			<Value />
		</Property>
	<Property cn="服务器端" type="14" group="点击时脚本" name="onClickServer" tips="鼠标点击本组件时触发的服务器端事件...">
		<Value/>
		<Description><![CDATA[
			鼠标点击本组件时触发的服务器端事件
			<pre>
/**
 * 点击时脚本
 * 
 * @param item
 *            控件对象
 */
public Object column6bae6_onClickServer(Item item) {
	//数据操作
	
	return “操作成功”;
}
			</pre>
			]]></Description>
	</Property>
		<Property cn="行脚本" type="14" name="rowScript"
			sh="value,rowIndex,cellRow,cellRow.getString(col),dataRow,dataRow.isEmpty(),dataRow.getString(col),dataRow.getInt(col),dataRow.getDouble(col),dataRow.getData(col),dataRow.index()"
			tips="可调用：cell,cellRow,dataRow,item,rowIndex,value">
			<Value />
		</Property>
		
		
		
		<Property cn="生成时脚本" type="14" name="onShow"
			tips="可写服务器端脚本，每个组件都会有此属性，会在系统解析此组件时执行此脚本">
			<Value />
		</Property>
	</Properties>
	<JsFunctions>
		<JsFunction name="onValidClient"><![CDATA[
/**
 * 验证脚本({itemid})
 * 
 * @param  rc 系统提供的AJAX调用对象
 * @param  value 控件的值
 */
function {methodName} (rc, value){
	
}]]>
		</JsFunction>
  	<JsFunction name="onChangeClient">
/**
 * 值改变时脚本({itemid})
 * 
 * @param  rc 系统提供的AJAX调用对象
 * @param  oldValue 控件改变前的旧值
 * @param  newValue 控件改变后的新值
 */
function {methodName} (rc, oldValue, newValue){
	
}
  	</JsFunction>
 <JsFunction name="beforeEdit">
/**
 * 编辑前脚本,根据返回值判断是否可编辑({itemid})
 * 
 * @param  record 当前行记录
 * @param  value  当前值
 */
function {methodName} (record, value){
	return true;
}
  	</JsFunction>
  </JsFunctions>
	<JavaFunctions>
		<JavaFunction name="onChangeServer">
<![CDATA[
/**
 * 值改变时脚本
 * 
 * @param item
 *            控件对象
 */
public Object {methodName}(Item item) {
	return null;
}
]]>
		</JavaFunction>
		<JavaFunction name="onValidServer">
<![CDATA[
/**
 * 验证脚本
 * 
 * @param item
 *            控件对象
 */
public Object {methodName}(Item item) {
	return null;
}
]]>
		</JavaFunction>
		<JavaFunction name="dynamicDataFilter">
<![CDATA[
/**
 * 过滤动态代码
 * 
 * @param item
 *            控件对象
 */
public List {methodName}(Item item) {
	return null;
}
]]>
		</JavaFunction>
		<JavaFunction name="onClickServer">
<![CDATA[
/**
 * 点击时脚本
 * 
 * @param item
 *            控件对象
 */
public Object {methodName}(Item item) {
	return null;
}
]]>
		</JavaFunction>
		<JavaFunction name="rowScript"
			imports="com.thunisoft.artery.parse.eform.form.cellset.Cell;com.thunisoft.artery.parse.eform.form.cellset.CellRow;">
<![CDATA[
/**
 * 行脚本
 * 
 * @param item
 *            控件对象
 * @param cell
 *            展现单元格对象
 * @param cellRow
 *            展现数据行对象
 * @param dataRow
 *            结果数据行对象
 * @param value
 *            当前单元格的值
 */
public void {methodName}(Item item, Cell cell, CellRow cellRow,
		Object dataRow, String value) {

}
]]>
		</JavaFunction>
	</JavaFunctions>
</Item>

